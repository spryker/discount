[
    {
        "fileName": "src/Spryker/Service/Discount/Calculator/Calculator.php",
        "description": "Access: Method Spryker\\Service\\Discount\\Calculator\\Calculator::getDiscountCalculatorPlugin() accesses Spryker\\Zed\\Discount\\Dependency\\Plugin\\DiscountCalculatorPluginInterface which violates rule \"No call from Service to Zed\"",
        "rule": "LayerAccessRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Service/Discount/DiscountServiceFactory.php",
        "description": "Access: Method Spryker\\Service\\Discount\\DiscountServiceFactory::getZedCalculatorPlugins() accesses Spryker\\Zed\\Kernel\\ClassResolver\\Business\\BusinessFactoryResolver which violates rule \"No call from Service to Zed\"",
        "rule": "LayerAccessRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Communication/Form/CalculatorForm.php",
        "description": "Method `Spryker\\Zed\\Discount\\Communication\\Form\\CalculatorForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Communication/Form/GeneralForm.php",
        "description": "Method `Spryker\\Zed\\Discount\\Communication\\Form\\GeneralForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Communication/Form/VoucherForm.php",
        "description": "Method `Spryker\\Zed\\Discount\\Communication\\Form\\VoucherForm::getBlockPrefix()` must have return type.",
        "rule": "ExternalMethodExtensionReturnTypeRule",
        "ruleset": "Spryker",
        "priority": "1"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToCurrencyBridge.php",
        "description": "Bridges: Method `getCurrentStoreWithCurrencies()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToCurrencyBridge.php",
        "description": "Bridges: Type should be defined for param `idCurrency` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToCurrencyBridge::getByIdCurrency()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToCurrencyBridge.php",
        "description": "Bridges: Method `getByIdCurrency()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToCurrencyBridge.php",
        "description": "Bridges: Method `getCurrent()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToLocaleFacadeBridge.php",
        "description": "Bridges: Method `getCurrentLocaleName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMessengerBridge.php",
        "description": "Bridges: Method `addSuccessMessage()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMessengerBridge.php",
        "description": "Bridges: Method `addErrorMessage()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMessengerBridge.php",
        "description": "Bridges: Method `addInfoMessage()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `amount` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToMoneyBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `isoCode` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToMoneyBridge::fromInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToMoneyBridge::convertDecimalToInteger()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToMoneyBridge.php",
        "description": "Bridges: Type should be defined for param `value` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToMoneyBridge::convertIntegerToDecimal()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToStoreFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `storeName` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToStoreFacadeBridge::getStoreByName()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToStoreFacadeBridge.php",
        "description": "Bridges: Method `getStoreByName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToTranslatorFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `id` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToTranslatorFacadeBridge::trans()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToTranslatorFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `domain` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToTranslatorFacadeBridge::trans()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToTranslatorFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `locale` in method `Spryker\\Zed\\Discount\\Dependency\\Facade\\DiscountToTranslatorFacadeBridge::trans()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/Discount/Dependency/Facade/DiscountToTranslatorFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `trans()`. Got `$id` but expected to be `string $id`. Got `$domain` but expected to be `?string $domain`. Got `$locale` but expected to be `?string $locale`. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
